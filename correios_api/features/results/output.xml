<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.0.2 (Python 3.5.2 on linux)" generated="20180402 10:08:46.580">
<suite name="GET" id="s1" source="/projetos_robot_framework/correios_api/features/GET.robot">
<test name="1. Cenário: Buscar por CEP válido (200 - OK)" id="s1-t1">
<kw name="Dado que esteja conectado na API &quot;viacep&quot;" library="keyword_GET">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Consulta_CEP</arg>
<arg>${HOST}/${CEP_VALIDO}/${HOST_cont}</arg>
<arg>disable_warnings=1</arg>
</arguments>
<msg level="INFO" timestamp="20180402 10:08:46.818">Creating Session using : alias=Consulta_CEP, url=https://viacep.com.br/ws/13086-510/json/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status starttime="20180402 10:08:46.817" status="PASS" endtime="20180402 10:08:46.818"></status>
</kw>
<status starttime="20180402 10:08:46.817" status="PASS" endtime="20180402 10:08:46.818"></status>
</kw>
<kw name="Quando o usuário consultar o CEP &quot;13086-510&quot;" library="keyword_GET">
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>Consulta_CEP</arg>
<arg>/</arg>
<arg>timeout=3</arg>
</arguments>
<assign>
<var>${RETORNO_GET}</var>
</assign>
<msg level="INFO" timestamp="20180402 10:08:47.686">Get Request using : alias=Consulta_CEP, uri=/, headers=None json=None</msg>
<msg level="INFO" timestamp="20180402 10:08:47.686">${RETORNO_GET} = &lt;Response [200]&gt;</msg>
<status starttime="20180402 10:08:46.819" status="PASS" endtime="20180402 10:08:47.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Resposta: ${RETORNO_GET.text}</arg>
</arguments>
<msg level="INFO" timestamp="20180402 10:08:47.687">Resposta: {
  "cep": "13086-510",
  "logradouro": "Rua Doutor Ricardo Benetton Martins",
  "complemento": "",
  "bairro": "Polo II de Alta Tecnologia (Campinas)",
  "localidade": "Campinas",
  "uf": "SP",
  "unidade": "",
  "ibge": "3509502",
  "gia": "2446"
}</msg>
<status starttime="20180402 10:08:47.687" status="PASS" endtime="20180402 10:08:47.687"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RETORNO_GET}</arg>
</arguments>
<msg level="INFO" timestamp="20180402 10:08:47.688">${RETORNO_GET} = &lt;Response [200]&gt;</msg>
<status starttime="20180402 10:08:47.688" status="PASS" endtime="20180402 10:08:47.688"></status>
</kw>
<status starttime="20180402 10:08:46.818" status="PASS" endtime="20180402 10:08:47.688"></status>
</kw>
<kw name="Então deve ser retornado status &quot;200&quot;" library="keyword_GET">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RETORNO_GET.status_code}</arg>
<arg>${STATUS_200}</arg>
</arguments>
<msg level="INFO" timestamp="20180402 10:08:47.689">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status starttime="20180402 10:08:47.689" status="PASS" endtime="20180402 10:08:47.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Status Code Retornado: ${RETORNO_GET.status_code} -- Status Code Esperado: ${STATUS_200}</arg>
</arguments>
<msg level="INFO" timestamp="20180402 10:08:47.689">Status Code Retornado: 200 -- Status Code Esperado: 200</msg>
<status starttime="20180402 10:08:47.689" status="PASS" endtime="20180402 10:08:47.689"></status>
</kw>
<status starttime="20180402 10:08:47.688" status="PASS" endtime="20180402 10:08:47.690"></status>
</kw>
<kw name="E o CEP apresentado deve ser o mesmo informado na consulta" library="keyword_GET">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RETORNO_GET.status_code}</arg>
<arg>${STATUS_200}</arg>
</arguments>
<msg level="INFO" timestamp="20180402 10:08:47.690">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status starttime="20180402 10:08:47.690" status="PASS" endtime="20180402 10:08:47.691"></status>
</kw>
<status starttime="20180402 10:08:47.690" status="PASS" endtime="20180402 10:08:47.691"></status>
</kw>
<kw name="E o logradouro: &quot;Rua Doutor Ricardo Benetton Martins&quot;" library="keyword_GET">
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key``/``value`` must be found in a `dictionary`.</doc>
<arguments>
<arg>${RETORNO_GET.json()}</arg>
<arg>logradouro</arg>
<arg>${LOGRADOURO_CEP_VALIDO}</arg>
</arguments>
<status starttime="20180402 10:08:47.691" status="PASS" endtime="20180402 10:08:47.692"></status>
</kw>
<status starttime="20180402 10:08:47.691" status="PASS" endtime="20180402 10:08:47.692"></status>
</kw>
<kw name="E o bairro: &quot;Polo II de Alta Tecnologia (Campinas)&quot;" library="keyword_GET">
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key``/``value`` must be found in a `dictionary`.</doc>
<arguments>
<arg>${RETORNO_GET.json()}</arg>
<arg>bairro</arg>
<arg>${BAIRRO_CEP_VALIDO}</arg>
</arguments>
<status starttime="20180402 10:08:47.692" status="PASS" endtime="20180402 10:08:47.692"></status>
</kw>
<status starttime="20180402 10:08:47.692" status="PASS" endtime="20180402 10:08:47.693"></status>
</kw>
<kw name="E a localidade: &quot;Campinas&quot;" library="keyword_GET">
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key``/``value`` must be found in a `dictionary`.</doc>
<arguments>
<arg>${RETORNO_GET.json()}</arg>
<arg>localidade</arg>
<arg>${LOCALIDADE_CEP_VALIDO}</arg>
</arguments>
<status starttime="20180402 10:08:47.693" status="PASS" endtime="20180402 10:08:47.693"></status>
</kw>
<status starttime="20180402 10:08:47.693" status="PASS" endtime="20180402 10:08:47.693"></status>
</kw>
<kw name="E o uf: &quot;SP&quot;" library="keyword_GET">
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key``/``value`` must be found in a `dictionary`.</doc>
<arguments>
<arg>${RETORNO_GET.json()}</arg>
<arg>uf</arg>
<arg>${UF_CEP_VALIDO}</arg>
</arguments>
<status starttime="20180402 10:08:47.694" status="PASS" endtime="20180402 10:08:47.694"></status>
</kw>
<status starttime="20180402 10:08:47.694" status="PASS" endtime="20180402 10:08:47.694"></status>
</kw>
<tags>
<tag>smoke</tag>
</tags>
<status critical="yes" starttime="20180402 10:08:46.816" status="PASS" endtime="20180402 10:08:47.694"></status>
</test>
<test name="2. Cenário: Buscar por CEP inexistente (200 - OK)" id="s1-t2">
<kw name="Dado que esteja conectado na API &quot;viacep&quot;" library="keyword_GET">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Consulta_CEP</arg>
<arg>${HOST}/${CEP_VALIDO}/${HOST_cont}</arg>
<arg>disable_warnings=1</arg>
</arguments>
<msg level="INFO" timestamp="20180402 10:08:47.696">Creating Session using : alias=Consulta_CEP, url=https://viacep.com.br/ws/13086-510/json/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status starttime="20180402 10:08:47.696" status="PASS" endtime="20180402 10:08:47.696"></status>
</kw>
<status starttime="20180402 10:08:47.696" status="PASS" endtime="20180402 10:08:47.696"></status>
</kw>
<kw name="Quando o usuário consultar o CEP &quot;99999-999&quot;" library="keyword_GET">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Consulta_CEP</arg>
<arg>${HOST}/${CEP_INEXISTENTE}/${HOST_cont}</arg>
</arguments>
<msg level="INFO" timestamp="20180402 10:08:47.697">Creating Session using : alias=Consulta_CEP, url=https://viacep.com.br/ws/99999-999/json/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status starttime="20180402 10:08:47.697" status="PASS" endtime="20180402 10:08:47.697"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>Consulta_CEP</arg>
<arg>/</arg>
<arg>timeout=3</arg>
</arguments>
<assign>
<var>${RETORNO_GET}</var>
</assign>
<msg level="INFO" timestamp="20180402 10:08:48.477">Get Request using : alias=Consulta_CEP, uri=/, headers=None json=None</msg>
<msg level="INFO" timestamp="20180402 10:08:48.477">${RETORNO_GET} = &lt;Response [200]&gt;</msg>
<status starttime="20180402 10:08:47.697" status="PASS" endtime="20180402 10:08:48.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Resposta: ${RETORNO_GET.text}</arg>
</arguments>
<msg level="INFO" timestamp="20180402 10:08:48.478">Resposta: {
  "erro": true
}</msg>
<status starttime="20180402 10:08:48.477" status="PASS" endtime="20180402 10:08:48.478"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RETORNO_GET}</arg>
</arguments>
<msg level="INFO" timestamp="20180402 10:08:48.478">${RETORNO_GET} = &lt;Response [200]&gt;</msg>
<status starttime="20180402 10:08:48.478" status="PASS" endtime="20180402 10:08:48.478"></status>
</kw>
<status starttime="20180402 10:08:47.697" status="PASS" endtime="20180402 10:08:48.478"></status>
</kw>
<kw name="Então deve ser retornado status &quot;200&quot;" library="keyword_GET">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RETORNO_GET.status_code}</arg>
<arg>${STATUS_200}</arg>
</arguments>
<msg level="INFO" timestamp="20180402 10:08:48.479">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status starttime="20180402 10:08:48.479" status="PASS" endtime="20180402 10:08:48.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Status Code Retornado: ${RETORNO_GET.status_code} -- Status Code Esperado: ${STATUS_200}</arg>
</arguments>
<msg level="INFO" timestamp="20180402 10:08:48.480">Status Code Retornado: 200 -- Status Code Esperado: 200</msg>
<status starttime="20180402 10:08:48.480" status="PASS" endtime="20180402 10:08:48.480"></status>
</kw>
<status starttime="20180402 10:08:48.479" status="PASS" endtime="20180402 10:08:48.480"></status>
</kw>
<kw name="E o erro: true" library="keyword_GET">
<kw name="Dictionary Should Contain Item" library="Collections">
<doc>An item of ``key``/``value`` must be found in a `dictionary`.</doc>
<arguments>
<arg>${RETORNO_GET.json()}</arg>
<arg>erro</arg>
<arg>${ERRO}</arg>
</arguments>
<status starttime="20180402 10:08:48.481" status="PASS" endtime="20180402 10:08:48.481"></status>
</kw>
<status starttime="20180402 10:08:48.480" status="PASS" endtime="20180402 10:08:48.481"></status>
</kw>
<tags>
<tag>inexistente</tag>
</tags>
<status critical="yes" starttime="20180402 10:08:47.695" status="PASS" endtime="20180402 10:08:48.481"></status>
</test>
<test name="3. Cenário: Buscar por CEP inválido (400 - Bad Request)" id="s1-t3">
<kw name="Dado que esteja conectado na API &quot;viacep&quot;" library="keyword_GET">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Consulta_CEP</arg>
<arg>${HOST}/${CEP_VALIDO}/${HOST_cont}</arg>
<arg>disable_warnings=1</arg>
</arguments>
<msg level="INFO" timestamp="20180402 10:08:48.483">Creating Session using : alias=Consulta_CEP, url=https://viacep.com.br/ws/13086-510/json/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status starttime="20180402 10:08:48.483" status="PASS" endtime="20180402 10:08:48.483"></status>
</kw>
<status starttime="20180402 10:08:48.482" status="PASS" endtime="20180402 10:08:48.483"></status>
</kw>
<kw name="Quando o usuário consultar o CEP &quot;$@%-*()&quot;" library="keyword_GET">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Consulta_CEP</arg>
<arg>${HOST}/${CEP_INVALIDO}/${HOST_cont}</arg>
</arguments>
<msg level="INFO" timestamp="20180402 10:08:48.484">Creating Session using : alias=Consulta_CEP, url=https://viacep.com.br/ws/$@%-*()/json/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status starttime="20180402 10:08:48.484" status="PASS" endtime="20180402 10:08:48.484"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>Consulta_CEP</arg>
<arg>/</arg>
<arg>timeout=3</arg>
</arguments>
<assign>
<var>${RETORNO_GET}</var>
</assign>
<msg level="INFO" timestamp="20180402 10:08:49.529">Get Request using : alias=Consulta_CEP, uri=/, headers=None json=None</msg>
<msg level="INFO" timestamp="20180402 10:08:49.529">${RETORNO_GET} = &lt;Response [400]&gt;</msg>
<status starttime="20180402 10:08:48.484" status="PASS" endtime="20180402 10:08:49.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Resposta: ${RETORNO_GET.text}</arg>
</arguments>
<msg level="INFO" timestamp="20180402 10:08:49.530">Resposta: &lt;html&gt;
&lt;head&gt;&lt;title&gt;400 Bad Request&lt;/title&gt;&lt;/head&gt;
&lt;body bgcolor="white"&gt;
&lt;center&gt;&lt;h1&gt;400 Bad Request&lt;/h1&gt;&lt;/center&gt;
&lt;hr&gt;&lt;center&gt;nginx/1.12.2&lt;/center&gt;
&lt;/body&gt;
&lt;/html&gt;
</msg>
<status starttime="20180402 10:08:49.529" status="PASS" endtime="20180402 10:08:49.530"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RETORNO_GET}</arg>
</arguments>
<msg level="INFO" timestamp="20180402 10:08:49.530">${RETORNO_GET} = &lt;Response [400]&gt;</msg>
<status starttime="20180402 10:08:49.530" status="PASS" endtime="20180402 10:08:49.530"></status>
</kw>
<status starttime="20180402 10:08:48.483" status="PASS" endtime="20180402 10:08:49.530"></status>
</kw>
<kw name="Então deve ser retornado status &quot;400&quot;" library="keyword_GET">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RETORNO_GET.status_code}</arg>
<arg>${STATUS_400}</arg>
</arguments>
<msg level="INFO" timestamp="20180402 10:08:49.531">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status starttime="20180402 10:08:49.531" status="PASS" endtime="20180402 10:08:49.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Status Code Retornado: ${RETORNO_GET.status_code} -- Status Code Esperado: ${STATUS_400}</arg>
</arguments>
<msg level="INFO" timestamp="20180402 10:08:49.532">Status Code Retornado: 400 -- Status Code Esperado: 400</msg>
<status starttime="20180402 10:08:49.531" status="PASS" endtime="20180402 10:08:49.532"></status>
</kw>
<status starttime="20180402 10:08:49.531" status="PASS" endtime="20180402 10:08:49.532"></status>
</kw>
<tags>
<tag>inválido</tag>
</tags>
<status critical="yes" starttime="20180402 10:08:48.482" status="PASS" endtime="20180402 10:08:49.532"></status>
</test>
<test name="4. Cenário: Buscar por CEP &quot;vazio&quot; (404 - Not Found)" id="s1-t4">
<kw name="Dado que esteja conectado na API &quot;viacep&quot;" library="keyword_GET">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Consulta_CEP</arg>
<arg>${HOST}/${CEP_VALIDO}/${HOST_cont}</arg>
<arg>disable_warnings=1</arg>
</arguments>
<msg level="INFO" timestamp="20180402 10:08:49.534">Creating Session using : alias=Consulta_CEP, url=https://viacep.com.br/ws/13086-510/json/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status starttime="20180402 10:08:49.533" status="PASS" endtime="20180402 10:08:49.534"></status>
</kw>
<status starttime="20180402 10:08:49.533" status="PASS" endtime="20180402 10:08:49.534"></status>
</kw>
<kw name="Quando o usuário consultar o CEP &quot;&quot;" library="keyword_GET">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Consulta_CEP</arg>
<arg>${HOST}/${CEP_VAZIO}/${HOST_cont}</arg>
</arguments>
<msg level="INFO" timestamp="20180402 10:08:49.535">Creating Session using : alias=Consulta_CEP, url=https://viacep.com.br/ws//json/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status starttime="20180402 10:08:49.535" status="PASS" endtime="20180402 10:08:49.535"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>Consulta_CEP</arg>
<arg>/</arg>
<arg>timeout=3</arg>
</arguments>
<assign>
<var>${RETORNO_GET}</var>
</assign>
<msg level="INFO" timestamp="20180402 10:08:50.355">Get Request using : alias=Consulta_CEP, uri=/, headers=None json=None</msg>
<msg level="INFO" timestamp="20180402 10:08:50.356">${RETORNO_GET} = &lt;Response [404]&gt;</msg>
<status starttime="20180402 10:08:49.535" status="PASS" endtime="20180402 10:08:50.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Resposta: ${RETORNO_GET.text}</arg>
</arguments>
<msg level="INFO" timestamp="20180402 10:08:50.356">Resposta: &lt;!DOCTYPE HTML&gt;
&lt;html lang="pt-br"&gt;

&lt;head&gt;
  &lt;title&gt;ViaCEP 404&lt;/title&gt;
  &lt;meta charset="utf-8" /&gt;
  &lt;style type="text/css"&gt;
      h1 {
          color: #666;
          text-align: center;
          font-size: 5em;
      }
      h2, h3 {
          color: #777;
          text-align: center;
          font-size: 3em;
      }
      h3 {
          font-size: 1.5em;
      }
  &lt;/style&gt;
&lt;/head&gt;

&lt;body&gt;
    &lt;h1&gt;404&lt;/h1&gt;
    &lt;h2&gt;Ops!&lt;/h2&gt;
    &lt;h3&gt;A página que você procura não foi encontrada.&lt;/h3&gt;
&lt;/body&gt;

&lt;/html&gt;
</msg>
<status starttime="20180402 10:08:50.356" status="PASS" endtime="20180402 10:08:50.356"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${RETORNO_GET}</arg>
</arguments>
<msg level="INFO" timestamp="20180402 10:08:50.357">${RETORNO_GET} = &lt;Response [404]&gt;</msg>
<status starttime="20180402 10:08:50.356" status="PASS" endtime="20180402 10:08:50.357"></status>
</kw>
<status starttime="20180402 10:08:49.534" status="PASS" endtime="20180402 10:08:50.357"></status>
</kw>
<kw name="Então deve ser retornado status &quot;404&quot;" library="keyword_GET">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${RETORNO_GET.status_code}</arg>
<arg>${STATUS_404}</arg>
</arguments>
<msg level="INFO" timestamp="20180402 10:08:50.357">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status starttime="20180402 10:08:50.357" status="PASS" endtime="20180402 10:08:50.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Status Code Retornado: ${RETORNO_GET.status_code} -- Status Code Esperado: ${STATUS_404}</arg>
</arguments>
<msg level="INFO" timestamp="20180402 10:08:50.358">Status Code Retornado: 404 -- Status Code Esperado: 404</msg>
<status starttime="20180402 10:08:50.358" status="PASS" endtime="20180402 10:08:50.358"></status>
</kw>
<status starttime="20180402 10:08:50.357" status="PASS" endtime="20180402 10:08:50.358"></status>
</kw>
<tags>
<tag>vazio</tag>
</tags>
<status critical="yes" starttime="20180402 10:08:49.532" status="PASS" endtime="20180402 10:08:50.358"></status>
</test>
<doc>Consulta de CEPS pela API aberta: https://viacep.com.br/ws/&lt;CEP&gt;/json/</doc>
<status starttime="20180402 10:08:46.581" status="PASS" endtime="20180402 10:08:50.359"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="4">Critical Tests</stat>
<stat fail="0" pass="4">All Tests</stat>
</total>
<tag>
<stat fail="0" pass="1">inexistente</stat>
<stat fail="0" pass="1">inválido</stat>
<stat fail="0" pass="1">smoke</stat>
<stat fail="0" pass="1">vazio</stat>
</tag>
<suite>
<stat fail="0" id="s1" pass="4" name="GET">GET</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
